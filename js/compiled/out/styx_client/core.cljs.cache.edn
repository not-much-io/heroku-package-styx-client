;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name styx-client.core, :imports nil, :requires {reagent reagent.core, styx-client.subs styx-client.subs, views styx-client.views, reagent.core reagent.core, styx-client.views styx-client.views, styx-client.handlers styx-client.handlers, config styx-client.config, styx-client.config styx-client.config, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {mount-root {:protocol-inline nil, :meta {:file "C:\\Users\\KKoert\\Documents\\Sandbox\\styx-client\\src\\cljs\\styx_client\\core.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([]))}, :name styx-client.core/mount-root, :variadic false, :file "src\\cljs\\styx_client\\core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "C:\\Users\\KKoert\\Documents\\Sandbox\\styx-client\\src\\cljs\\styx_client\\core.cljs", :line 16, :column 16, :end-line 16, :end-column 20, :export true, :arglists (quote ([]))}, :name styx-client.core/init, :variadic false, :file "src\\cljs\\styx_client\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}